Name:		ldm
Version:	@VERSION@
%define pkgid   %{name}-%{version}
Release:	1%{?dist}
Summary:	A system for subscribing-to, receiving, relaying, and processing data-products

Group:		Applications/Internet
Vendor:         University Corporation for Atmospheric Research
Packager:       LDM Support <support-ldm@unidata.ucar.edu>
License:	NCSA-ish
URL:		http://www.unidata.ucar.edu/software/ldm
Source:	        %{pkgid}.tar.gz
Icon:           ldm-50x50.xpm
Exclusiveos:    linux

# The default home-directory of the LDM user.
#
%define defhome /usr/local/ldm

# The actual home-directory of the LDM user. May be overridden by rpm(1)'s
# "--prefix" option.
#
Prefix:         ${defhome}

# The version-specific installation-directory of this package.
#
%define versdir %{_prefix/%{pkgid}

BuildRequires:  %{__make} ${__sed} ${__perl} %{__cc} %{__awk} sh libxml2.so \
                libz.so libpthread.so.0
Requires:	%{__awk} cat echo fmt gnuplot grep libxml2.so libz.so ls mv \
                netstat ntpdate perl sed sh su test top

# Only a virtual file and a few high-value files are mentioned. rpmbuild(1)
# automatically adds the LDM shared-library.
#
Provides:       %{name} ldmd notifyme pqact
        
%define debug_package   %{nil}

%description
Unidata's Local Data Manager (LDM) acquires data-products and shares them with
other networked computers. A data-product is treated as a opaque unit, thus
nearly any finite-sized data can be relayed. In particular, the LDM can handle
data from the National Weather Service's NOAAport data streams, including
gridded data from the numerical forecast models. It also handles NEXRAD radar
data, lightning data from the National Lightning Detection Network, and GOES
satellite imagery.

The flow of data-products in an LDM system centers around the LDM product-queue,
This queue receives data-products extracted from local data sources as well as
products received from other LDM servers. Once in the queue, a product is
immediately transmitted to other LDM-s that have subscribed to that data.

Data-products in the queue are selected for local processing by product-matching
predicates in a configuration file. Processing actions include writing the
product to a file and piping the product to an arbitrary program. Programs are
available from Unidata that interface with the LDM and convert products into
the forms required by various applications.

###############################################################################
%prep

%setup -q -n %{pkgid}

###############################################################################
%build

LDMHOME=%{_prefix}; export LDMHOME

# The configure(1) script's "prefix" has slightly different semantics than
# rpm(1)'s "prefix".
#
# Because this is a generic RPM, everything is built.
#
./configure --prefix=%{versdir} --disable-root-actions --with-noaaport \
    --with-gribinsert
DESTDIR=%{buildroot} make

###############################################################################
%install

rm -rf %{buildroot}
DESTDIR=%{buildroot} make install

###############################################################################
%clean

rm -rf %{buildroot}

###############################################################################
%pre

# The LDM user is the user associated with the %%{_prefix} home-directory or
# "ldm" if that home-directory doesn't exist.
#
%define user    %(awk -F : 'substr($6,1,length("%{_prefix}"))=="%{_prefix}" \
        {print $1;exit}END{exit 1}' /etc/passwd || echo ldm)

if ! grep -q '^%{user}:' /etc/passwd; then
    useradd -d %{_prefix} -m %{user} || exit 1
fi

    shell=`awk -F : '$1=="%{user}"{}`

###############################################################################
%files

%defattr(-,%{user},root,-)

%attr(04755,root,root) %{versdir}/bin/ldmd
%attr(04755,root,root) %{versdir}/bin/hupsyslog
%attr(04755,root,root) %{versdir}/bin/ensureSyslogEntry
%attr(04755,root,root) %{versdir}/bin/ensureRpcEntry
%attr(04755,root,root) %{versdir}/bin/ensureServicesEntry

%{_prefix}/etc
%{_prefix}/var
%{versdir}/bin
%{versdir}/include
%{versdir}/lib
%{versdir}/share

%docdir %{versdir}/share
%doc CHANGE_LOG COPYRIGHT README

%config(noreplace) %{_prefix}/etc/ldmd.conf
%config(noreplace) %{_prefix}/etc/pqact.conf
%config(noreplace) %{_prefix}/etc/registry.xml
%config(noreplace) %{_prefix}/etc/scour.conf

###############################################################################
%post

# Find the configuration-file for the system logging daemon
if test -e /etc/rsyslog.conf; then
    SYSLOG_CONF=/etc/rsyslog.conf
else
    if test -e /etc/syslog.conf; then
        SYSLOG_CONF=/etc/syslog.conf
    else
        echo 1>&2 system logging configuration-file not found
        exit 1
    fi
fi

# Find the logging facility for the LDM
LOG_LDM=`awk '$1 !~ /^#/ && $2 ~ /\/ldmd\.log$/ {print $1; exit}' \
    $SYSLOG_CONF | sed 's/\..*//'`
if test -z "$LOG_LDM"; then
    for LOG_LDM_NO in 0 1 2 3 4 5 6 7; do
        grep -F -q local$LOG_LDM_NO $SYSLOG_CONF && continue
        LOG_LDM=local$LOG_LDM_NO
        break
    done
fi
if test -z "$LOG_LDM"; then
    cat <<CAT_EOF | fmt 1>&2
Could not discover a local logging facility for the LDM system
CAT_EOF
    exit 1
fi

# Find the pathname of the LDM log file
if test -e %{_prefix}/logs; then
    LDM_LOGFILE=%{_prefix}/logs/ldmd.log
else
    LDM_LOGFILE=%{_prefix}/var/logs/ldmd.log
fi

# Find the LDM data directory
if ls %{_prefix}/data >/dev/null 2>&1; then
    DATA_DIR=%{_prefix}
else
    DATA_DIR=%{_prefix}}/var/data
fi

# Perform superuser actions
%{versdir}/bin/ensureSyslogEntry $LOG_LDM $SYSLOG_CONF $LDM_LOGFILE &&
    %{versdir}/bin/ensureRpcEntry &&
    %{versdir}/bin/ensureServicesEntry || exit 1

# Perform LDM user actions
su - %{user} <<SU_EOF
%{versdir}/bin/ensureLdmhomeLinks %{_prefix} %{pkgid} &&
%{versdir}/bin/ensureVar %{_prefix} %{_prefix}/var/queues \
    %{_prefix}/var/logs ${DATA_DIR} || exit 1

# Adjust pathnames in the LDM registry
sed -e "s;%{defhome};%{_prefix};g" %{_prefix}/etc/registry.xml \
    >%{_prefix}/etc/registry.xml.new && 
    mv %{_prefix}/etc/registry.xml %{_prefix}/etc/registry.xml.old &&
    mv %{_prefix}/etc/registry.xml.new %{_prefix}/etc/registry.xml || exit 1
    
case `awk -F : '$1==%{user}{print $7;exit}'` in
    
esac
    
SU_EOF

###############################################################################
%changelog