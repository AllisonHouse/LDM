<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
    <meta name="UIINDEX" content="4">
   <meta name="BOOKMARK" content="Source Install Steps">
   <meta name="AUTHOR" content="steve">
   <meta name="KEYWORDS" content="LDM, install, installation, source">
   <title>LDM Source-Code Installation</title>
</head>
<body>

<h1 align="center">LDM Source-Code Installation</h1>       

<hr>

<h2>Short Installation Instructions:</h3>

<p>
Not all development enviroments can build and install this package. See the
long installation instructions in the next section for details.

<p>
The following assumes that you are familiar with both the LDM system and with
autoconf-based package-installation. If you're not, then follow the long
installation instructions in the next section. 

<pre>
    $ su - ldm
    $ wget ftp://ftp.unidata.ucar.edu/pub/ldm/@PACKAGE@-@VERSION@.tar.gz
    $ gunzip -c @PACKAGE@-@VERSION@.tar.gz | pax -r
    $ cd @PACKAGE@-@VERSION@
    $ ./configure [--disable-max-size] [--enable-logging=local<b><i>n</i></b>] [CC=...] [CFLAGS=...] >configure.log 2&gt;&1
    Password: ...
    $ make install &gt;make.log
    $ make clean # optional
    $ vi ~/ldmadmin-pl.conf # necessary if no previous installation exists
</pre>

<p>
The root of the installation tree will be <code>~ldm/@PACKAGE@-@VERSION@</code>
for the version-dependent files.

<p>
If you encounter problems, then follow the long installation instructions in the next section. 

<hr>

<h2>Long Installation Instructions:</h3>

<ol>

<li>
<a NAME="become"></a>
<h3>Become the LDM User</h3>

<p>Follow
<a href="become_ldm.html">this advice</a> on becoming the 
<a href="glindex.html#LDM user">LDM user</a>.

<p><a href="../workshop/specifics.html#becomeLdmUser">Workshop-specific instructions</a>.

<li>
<a NAME="obtain"></a>
<h3>
Obtain the 
<a href="glindex.html#LDM">LDM</a> Source-Distribution</h3>

<p>The 
<a href="glindex.html#LDM">LDM</a> 
source-distribution can be obtained by clicking on the appropriate link in the 
<a href="/downloads/ldm/">LDM download page</a>.
Download the file into the 
<a href="glindex.html#LDM user">LDM user</a>'s home directory.

<p>The remaining instructions assume that the distribution was downloaded 
into the 
<a href="glindex.html#LDM user">LDM user</a>'s home-directory.</p>

<li>
<a NAME="unpack"></a>
<h3>Unpack the Distribution</h3>

<p>Unpack the distribution in the 
<a href="glindex.html#LDM user">LDM user</a>'s home directory
using the <b><code>gunzip(1)</code></b> and <b><code>tar(1)</code></b>
utilities.
For example:
<blockquote><pre>
cd                                     # go to the LDM user's home-directory
gunzip -c @PACKAGE@-@VERSION@.tar.gz | tar xvf - # unpack the distribution
</pre></blockquote>

The name of the
subdirectory will contain the version identifier of the just-unpacked package
(<i>e.g.</i>, <tt><b>@PACKAGE@-@VERSION@</b></tt>).  For the meaning of
the version identifier, see
<a href="versionId.html">The LDM Version Identifier</a>.

<li>
<a NAME="build"></a>
<h3>
Build and Install the Distribution</h3>

<ol type="A">

<li><p>Go to the top-level directory of the just-unpacked package:
<blockquote><pre>
cd $HOME/@PACKAGE@-@VERSION@
</pre></blockquote>
</p></li>

<a name="clean-up"></a>
<li><p>If you need to clean-up from a previous build attempt, then 
use the <b><code>make(1)</code></b> utility to return the 
distribution to a pristine state:
<blockquote><pre>
make distclean
</pre></blockquote>
Don't worry if this command fails or even fails to execute.</li>

<a name="environment-variables"></a>
<li><p>(Optional) If necessary, override the default values for certain
build-configuration parameters by setting the associated environment
variables.  The environment variables that you may set include the
following:
<blockquote>
<table align="center" border="2" cellpadding="6" cellspacing="0">
    <tr>
	<th>Variable</th>
	<th>Meaning</th>
	<th>Example Value</th>
    </tr>
	<td><code>CC</code></td>
	<td>C compiler</td>
	<td><code>/usr/gnu/bin/gcc</code></td>
    </tr>
    <tr>
	<td><code>CPPFLAGS</code></td>
	<td >C preprocessor options</td>
	<td><code>-DNDEBUG</code></td>
    </tr>
    <tr>
	<td><code>CFLAGS</code></td>
	<td >C compiler options</td>
	<td><code>-O3</code></td>
    </tr>
    <tr>
	<td><code>LIBS</code></td>
	<td >Libraries to use</td>
	<td><code>-lrpcsoc</code></td>
    </tr>
</table>
</blockquote>
Normally, this step should not be necessary.

<p>How to set an environment variable depends on your user-shell.  For
example:
<blockquote>
<table align="center" border="2" cellpadding="6" cellspacing="0">
    <tr>
	<th>User Shell</th>
	<th>Example</th>
    </tr>
	<td>Standard UNIX<sup>®</sup> (e.g. <code>sh, ksh, bash</code>)</td>
	<td nowrap><code>export CC=/usr/gnu/bin/gcc</code></td>
    </tr>
    <tr>
	<td><code>csh</code>-like (e.g. <code>csh, tcsh</code>)</td>
	<td nowrap><code>setenv CC /usr/gnu/bin/gcc</code></td>
    </tr>
</table>
</blockquote>

<p><b>NOTE: Because of the following step, you should unset all
of the above environment variables that you don't explicitly use.
In particular, you should probably not set any of the above
environment variables in your shell's profile-file.</b>

<li>
<p>Decide if the
<a href="glindex.html#LDM">LDM</a> system needs to support
a small <a href="glindex.html#product-queue">product-queue</a> from a
previous installation.  By default, the build procedure will create an
<a href="glindex.html#LDM">LDM</a> system that supports a
64-bit <a href="glindex.html#product-queue">product-queue</a>,
which can be up to (2^64)-1 bytes in size (if that is possible on your
computer system).  This aspect of the 
<a href="glindex.html#LDM">LDM</a>
is different from version 6.1 (and earlier versions) which required
manual modification of the build procedure in order to support a large
<a href="glindex.html#product-queue">product-queue</a>.
It could be, however, that you wish to continue to use the
32-bit <a href="glindex.html#product-queue">product-queue</a>
created by a 6.1 (or earlier) version of the
<a href="glindex.html#LDM">LDM</a>,
in which case, you should specify the option 
<code><b>--disable-max-size</b></code>
when executing the <b><code>configure</code></b> script.  This will result in an
<a href="glindex.html#LDM">LDM</a>
system that will continue to work with the previously-existing
<a href="glindex.html#product-queue">product-queue</a>.

<p><a href="#pqcheck">Step 7</a>, below, contains related information.

<li>
<p><a name="run configure script"></a>
Run the <b><code>configure</code></b> script.  You may use the following
options, when and if appropriate:
<blockquote>
<dl>
    <p><dt><code>--disable-max-size</code>
    <dd>Disables any attempt to maximize the size of the 
	programming-environment.  Use of this option depends on your
	decision from the previous step and
	<a href="platform.html#development">
	whether or not it's necessary given your platform and C compiler</a>.
	The default is to try to maximize the integer, long, pointer and 
	<code>off_t</code> programming-environment in order to support
	large
	<a href="glindex.html#product-queue">product-queue</a>s.

    <p><dt><code>--enable-logging=<a href="glindex.html#localn">local<i>n</i>
	</a>
    <dd>Configures the <a href="glindex.html#LDM">LDM</a> to use the
	<a href="glindex.html#localn">local<i>n</i></a>
	facility for logging messages.  If you have a previous 
	<a href="glindex.html#LDM">LDM</a>
	installation, then you should use the same facility.
	The default is to use the
	<code><b>local0</b></code> facility.
</dl>
</blockquote>

<p>Redirect <em>both</em> standard output
and standard error to the file <b><code>configure.log</code></b>.
The relevant command depends on your user-shell.  For example:
<blockquote>
<table align="center" border="2" cellpadding="6" cellspacing="0">
    <tr>
	<th>User Shell</th>
	<th>Example</th>
    </tr>
	<td>Standard UNIX<sup>®</sup> (e.g. <code>sh, ksh, bash</code>)</td>
	<td><code>./configure&nbsp;...&nbsp;>configure.log&nbsp;2>&1</code><br>
	</td>
    </tr>
    <tr>
	<td><code>csh</code>-like (e.g. <code>csh, tcsh</code>)</td>
	<td><code>./configure&nbsp;&nbsp;...&nbsp;>&!&nbsp;configure.log</code><br>
	</td>
    </tr>
</table>
</blockquote>
This step customizes the installation process for your particular
system.

Because certain aspects of the LDM require root privileges
(<i>e.g.</i>, listening on port 388, using the system logging daemon), the
configure script will acertain if you can access those privileges.  <b>The
script will ask you for your password and, possibly, the superuser's 
(<i>i.e.</i> root's) password.</b>  The script doesn't store or transmit this
information, it simply uses the passwords to acertain if you have access to
the necessary privileges.

If you don't have access to root privileges (or don't trust the configure
script) then simply enter nonsense when asked for the passwords.  The
superuser will subsequently have to execute an additional step in order
to complete the installation process.
</li>

<p>Inspect the file <b><code>configure.log</code></b> to verify the
configuration process.
If an error occurred, then the reason for the error can often be found
in the file <b><code>config.log</code></b> (note the slightly different name).<p>
<p>If you email the 
<a href="glindex.html#UPC">UPC</a>
because of a problem with this step, be sure to
enclose the files <b><code>configure.log</code></b> and 
<b><code>config.log</code></b>.</p>
</li>

<li>
<p>Use the 
<a href="platform.html#development"><b><code>make(1)</code></b> utility
appropriate for your system</a> to build and install the package,
redirecting <em>both</em> standard output
and standard error to the file <b><code>make.log</code></b>.
The relevant command depends on your user shell.  For example:
<blockquote>
<table align="center" border="2" cellpadding="6" cellspacing="0">
    <tr>
	<th>User Shell</th>
	<th>Command</th>
    </tr>
	<td>Standard UNIX<sup>®</sup> (e.g. <code>sh, ksh, bash</code>)</td>
	<td nowrap><code><a href="platform.html#development">make</a> install
	    &gt;make.log 2>&1</code></td>
    </tr>
    <tr>
	<td><code>csh</code>-like (e.g. <code>csh, tcsh</code>)</td>
	<td nowrap><code><a href="platform.html#development">make</a> install
	    &gt;&! make.log</code></td>
    </tr>
</table>
</blockquote>

This step builds the package libraries and programs and installs
them.</p>

<p>Inspect the file <b><code>make.log</code></b> to verify the
installation process.  If something went wrong that you think might be fixed by
<a href="#environment-variables">setting an environment variable</a>
(such as using the <b><code>cc</code></b> compiler rather than the
<b><code>c89</code></b> compiler) then return to the
<a href="#clean-up">clean-up step</a> above.

<p>If you email the 
<a href="glindex.html#UPC">UPC</a>
because of a problem with this step, be sure to
enclose the files <b><code>configure.log</code></b>, 
<b><code>config.log</code></b>, and
<b><code>make.log</code></b>.</p>
</li>

<li><a name="pqcheck"></a>
<p>(Optional) If you decided that the just-built
<a href="glindex.html#LDM">LDM</a> system should work with the previous
<a href="glindex.html#product-queue">product-queue</a>
from a version 6.1 (or earlier)
<a href="glindex.html#LDM">LDM</a>, then verify that it
does so by executing the command 
<blockquote><pre>
bin/pqcheck
</blockquote></pre>
If this indicates that the
<a href="glindex.html#product-queue">product-queue</a> is invalid, then
you must either 
reinstall this package -- starting with the
<a href="#clean-up">clean-up step above</a> --
and specify the 
<code><b>--disable-max-size</b></code>
option to the <code><b>configure</b></code> script when it is executed, or
you will have to remove the previous 
<a href="glindex.html#product-queue">product-queue</a> and
create a new, empty one using the programs of this package before starting
the new LDM.

<li>
<p>Use the <a href="platform.html#development"><b><code>make</code></b>
utility appropriate for your system</a> to install the package components,
redirecting <em>both</em> standard output
and standard error to the file <b><code>install.log</code></b>.
The relevant command depends on your user shell.  For example:
<blockquote>
<table align="center" border="2" cellpadding="6" cellspacing="0">
    <tr>
	<th>User Shell</th>
	<th>Command</th>
    </tr>
	<td>Standard UNIX<sup>®</sup> (e.g. <code>sh, ksh, bash</code>)</td>
	<td nowrap><code><a href="platform.html#development">make</a>
	    install &gt;install.log 2>&1</code></td>
    </tr>
    <tr>
	<td><code>csh</code>-like (e.g. <code>csh, tcsh</code>)</td>
	<td nowrap><code><a href="platform.html#development">make</a>
	    install &gt;&! install.log</code></td>
    </tr>
</table>
</blockquote>
</p>

<p>Inspect the file <b><code>install.log</code></b> to verify the
installation process.  Ignore all errors that <b><code>make</code></b>, itself,
ignores.</p>

<p>If you email the 
<a href="glindex.html#UPC">UPC</a>
because of a problem with this step, be sure to
enclose the file <b><code>install.log</code></b>.</p>
</li>

<li>
<p>
If the configure script was unable to access superuser privileges, then
the superuser must execute <b><code>make root-actions</code></b> to finish
the installation.  For example:
<blockquote><pre>
su root -c 'make root-actions'
</blockquote></pre>
Note that this example requires the superuser's password.
</p>

<p>Among other things, this step is necessary for the 
<a href="glindex.html#LDM">LDM</a> server to listen on port 388 (which is
a restricted port) 
and for the LDM's <b><code>hupsyslog(1)</code></b> utility
to notify the system logging daemon when a new log-file has been
created.

<li>
<p>Use the <b><code>make(1)</code></b> utility to clean-up after yourself.
<blockquote><pre>
make clean
</blockquote></pre>
</li>

</ol>

<p><a href="../workshop/specifics.html#build">Workshop-specific instructions</a>.

<li>
<a name="subdirs"></a>
<h3>(Optional) Modify the installed subdirectory structure</h3>

    <p>
    You may skip this step if you already have an LDM installation
    (because you are upgrading your LDM, for example) because the
    subdirectory structure should already be correct.

    <p>The default installation will create some subdirectories
    in the LDM user's home directory.
    The subdirectories are
    <em><tt>queue</tt></em> (containing the LDM product-queue),
    <em><tt>logs</tt></em> (containing LDM log files),
    and <em><tt>data</tt></em> (by default, containing locally-decoded data).
    If the LDM user's home directory is automatically backed-up or is on
    a remotely-mounted disk, then this structure should be modified.

    The LDM's
    <a href="glindex.html#product-queue">product-queue</a> 
    <strong>must</strong> be on a locally-mounted disk because it's
    memory-mapped, file-locked, and can be accessed like free beer at a frat
    party.  Its contents are also highly volatile and probably
    shouldn't be backed-up -- a situation that's also true for the LDM
    log files and, possibly, the decoded-data hierarchy.  For these
    reasons, you might consider moving some of these
    subdirectories to another disk partition.
    For example, the
    following will create an LDM-specific directory on a disk partition
    that is local to most systems but that's not automatically backed-up:
    <pre>
	su                           # become root
	mkdir /var/ldm               # create new subdirectory
	chown ldm:<i>groupId</i> /var/ldm   # change ownership
	exit                         # become LDM user
    </pre>
    Once this is done, you can move any of the previously-mentioned
    subdirectories.  For example, the
    following moves the decoded-data directory:
    <pre>
	mkdir /var/ldm/data          # create new subdirectory
	chmod -R g+w /var/ldm/data   # (optional) set group write permission
	cd                           # go to home directory
	rmdir data                   # remove previous default subdirectory
	ln -s /var/ldm/data data     # create link from previous default
    </pre>
    The <em><tt>queue</tt></em> and <em><tt>logs</tt></em> subdirectories
    can be similarly handled.

<script language="JavaScript" type="text/JavaScript">
document.write(date_modified);
</script>

</body>
</html>
